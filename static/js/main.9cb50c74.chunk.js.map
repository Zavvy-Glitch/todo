{"version":3,"sources":["context/Settings.js","hooks/form.js","components/todo/todo.js","components/todo/header.js","components/todo/items.js","components/todo/useSettings.js","components/auth/context.js","components/auth/auth.js","components/auth/login.js","app.js","index.js"],"names":["SettingsContext","React","createContext","Settings","props","useState","itemPref","setItemPref","dispComp","setDisComp","sort","setSort","useEffect","item","JSON","parse","window","localStorage","getItem","Object","keys","length","console","log","setItem","stringify","val","count","Provider","value","children","useForm","callback","values","setValues","handleChange","event","persist","target","name","handleSubmit","preventDefault","text","assignee","ToDo","id","uuid","complete","dup","list","filter","todo","toLowerCase","setList","settings","useContext","onSubmit","onChange","type","placeholder","defaultValue","min","max","Header","incomplete","Items","current","setCurrent","newPage","e","indOfLast","indOfFirst","currentToDo","slice","getToDo","map","difficulty","onClick","items","toggleComplete","className","toString","itemsPerPage","UserSettings","htmlFor","checked","testUsers","admin","password","role","capabilities","editor","writer","LoginContext","LoginProvider","can","capability","state","user","includes","login","username","token","jwt","sign","process","REACT_APP_SECRET","validateToken","logout","setLoginState","verify","loggedIn","cookie","save","setState","qs","URLSearchParams","location","search","cookieToken","load","get","this","Component","Login","isLoggedIn","context","canDo","okToRender","condition","contextType","App","setIncomplete","incompleteCount","document","title","Main","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.9cb50c74.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nexport const SettingsContext = React.createContext();\n\nfunction Settings(props) {\n  let [itemPref, setItemPref] = useState(5);\n  let [dispComp, setDisComp] = useState(true);\n  let [sort, setSort] = useState('difficulty');\n\n  useEffect(() => {\n    let item = JSON.parse(window.localStorage.getItem(\"settings\")) || {};\n    if (Object.keys(item).length === 0) {\n      console.log(\"Not Items\");\n    } else {\n      console.log(\"This\", item);\n      setItemPref(item.itemPref);\n      setDisComp(item.dispComp);\n      setSort(item.sort)\n    }\n  }, []);\n\n  useEffect(() => {\n    window.localStorage.setItem(\n      \"settings\",\n      JSON.stringify({ itemPref, dispComp, sort })\n    );\n  }, [itemPref, dispComp, sort]);\n\n  let val = {\n    dispComp,\n    setDisComp: function () {\n      setDisComp(!dispComp);\n    },\n    itemPref,\n    setItemPref: function (count) {\n      setItemPref(count);\n    },\n    sort: \"\",\n  };\n\n  return (\n    <SettingsContext.Provider value={val}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\n\nexport default Settings;\n","import { useState } from \"react\";\n\nconst useForm = (callback) => {\n  const [values, setValues] = useState({});\n\n  const handleSubmit = (event) => {\n    if (event) event.preventDefault();\n    if (!values.text || !values.assignee) return;\n    callback(values);\n  };\n\n  const handleChange = (event) => {\n    event.persist();\n    setValues((values) => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n  };\n};\n\nexport default useForm;\n","import React, {useContext} from \"react\";\nimport useForm from \"../../hooks/form.js\";\nimport { SettingsContext } from \"../../context/Settings.js\";\n\nimport { v4 as uuid } from \"uuid\";\n\nconst ToDo = (props) => {\n  const { handleChange, handleSubmit } = useForm(addItem);\n  const settings = useContext(SettingsContext);\n  console.log(settings)\n\n  function addItem(item) {\n    item.id = uuid();\n    item.complete = false;\n    const dup = props.list.filter((todo) => {\n      if (todo.text.toLowerCase() === item.text.toLowerCase()) {\n        if (todo.assignee.toLowerCase() === item.assignee.toLowerCase()) {\n          return true;\n        }\n      }\n      return false;\n    });\n    if (dup.length > 0) {\n      return;\n    }\n    props.setList([...props.list, item]);\n  }\n\n  // function deleteItem(id) {\n  //   const items = props.list.filter((item) => item.id !== id);\n  //   props.setList(items);\n  // }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <h2>Add To Do Item</h2>\n\n        <label>\n          <span>To Do Item</span>\n          <input\n            onChange={handleChange}\n            name=\"text\"\n            type=\"text\"\n            placeholder=\"Item Details\"\n          />\n        </label>\n\n        <label>\n          <span>Assigned To</span>\n          <input\n            onChange={handleChange}\n            name=\"assignee\"\n            type=\"text\"\n            placeholder=\"Assignee Name\"\n          />\n        </label>\n\n        <label>\n          <span>Difficulty</span>\n          <input\n            onChange={handleChange}\n            defaultValue={3}\n            type=\"range\"\n            min={1}\n            max={5}\n            name=\"difficulty\"\n          />\n        </label>\n\n        <label>\n          <button type=\"submit\">Add Item</button>\n        </label>\n      </form>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from \"react\";\n\nexport default function Header(props) {\n  return (\n    <header>\n      <h1>To Do List</h1>\n      <h2> {props.incomplete} items pending</h2>\n    </header>\n  );\n}\n","import React, { useContext, useState } from \"react\";\nimport { SettingsContext } from \"../../context/Settings.js\";\n\nfunction Items(props) {\n  let settings = useContext(SettingsContext);\n  let [current, setCurrent] = useState(1);\n\n  function toggleComplete(id) {\n    const items = props.list.map((item) => {\n      if (item.id === id) {\n        item.complete = !item.complete;\n      }\n      return item;\n    });\n    props.setList(items);\n  }\n\n  function newPage(e) {\n    if (e.target.id === \"next\") {\n      setCurrent(current + 1);\n      return;\n    }\n    setCurrent(current - 1);\n  }\n\n  function getToDo() {\n    const indOfLast = current * settings.itemPref;\n    const indOfFirst = indOfLast - settings.itemPref;\n    const currentToDo = props.list.slice(indOfFirst, indOfLast);\n\n    if (!settings.dispComp) {\n      return currentToDo.filter((item) => {\n        if (item.complete) {\n          return false;\n        }\n        return true;\n      });\n    }\n    return currentToDo;\n  }\n\n  return (\n    <div>\n      <div>\n        {getToDo().map((item) => (\n          <div key={item.id}>\n            <p>\n              <small>Assigned to: {item.assignee}</small>\n            </p>\n            <p>{item.text}</p>\n            <p>\n              <small>Difficulty: {item.difficulty}</small>\n            </p>\n\n            <div onClick={() => toggleComplete(item.id)}>\n              Complete:{\" \"}\n              <button\n                type=\"button\"\n                className={`w-10 rounded-md py-1 px-1 cursor-pointer ${\n                  item.complete === true ? \"bg-green-300\" : \"bg-red-300\"\n                }`}\n              >\n                {item.complete.toString()}\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div>\n        {current > 1 && (\n          <button id=\"prev\" onClick={newPage} type=\"button\">\n            PREV\n          </button>\n        )}\n        {props.list.length > settings.itemsPerPage ? (\n          <button id=\"next\" onClick={newPage} type=\"button\">\n            NEXT\n          </button>\n        ) : null}\n      </div>\n    </div>\n  );\n}\n\nexport default Items;\n","import React, { useContext } from \"react\";\nimport { SettingsContext } from \"../../context/Settings.js\";\n\nfunction UserSettings() {\n  let settings = useContext(SettingsContext);\n  return (\n    <div>\n      <label htmlFor=\"item count\">Item Count: </label>\n      <input\n        id=\"item count\"\n        type=\"number\"\n        name=\"item count\"\n        min=\"1\"\n        value={settings.itemPref}\n        max=\"10\"\n        onChange={(e) => settings.setItemPref(e.target.value)}\n      />\n\n      <label htmlFor=\"display completed\"> Display Completed</label>\n      <input\n        type=\"checkbox\"\n        id=\"display completed\"\n        name=\"display completed\"\n        onChange={(e) => settings.setDisComp(e.target.value)}\n        checked={settings.dispComp}\n        onClick={() => {\n          settings.setDisComp();\n        }}\n      />\n    </div>\n  );\n}\n\nexport default UserSettings;\n","import React from \"react\";\nimport cookie from \"react-cookies\";\nimport jwt from \"jsonwebtoken\";\n\nconst testUsers = {\n  admin: {\n    password: \"password\",\n    name: \"Administrator\",\n    role: \"admin\",\n    capabilities: [\"create\", \"read\", \"update\", \"delete\"],\n  },\n  editor: {\n    password: \"password\",\n    name: \"Editor\",\n    role: \"editor\",\n    capabilities: [\"read\", \"update\"],\n  },\n  writer: {\n    password: \"password\",\n    name: \"Writer\",\n    role: \"writer\",\n    capabilities: [\"create\"],\n  },\n};\n\nexport const LoginContext = React.createContext();\n\nclass LoginProvider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      can: this.can,\n      login: this.login,\n      logout: this.logout,\n      user: { capabilities: [] },\n    };\n  }\n\n  can = (capability) => {\n    return this?.state?.user?.capabilities?.includes(capability);\n  };\n\n  login = (username, password) => {\n    if (testUsers[username]) {\n      // Create a \"good\" token, like you'd get from a server\n      const token = jwt.sign(testUsers[username], process.env.REACT_APP_SECRET);\n      this.validateToken(token);\n    }\n  };\n\n  logout = () => {\n    this.setLoginState(false, null, {});\n  };\n\n  validateToken = (token) => {\n    try {\n      let user = jwt.verify(token, process.env.REACT_APP_SECRET);\n      this.setLoginState(true, token, user);\n    } catch (e) {\n      this.setLoginState(false, null, {});\n      console.log(\"Token Validation Error\", e);\n    }\n  };\n\n  setLoginState = (loggedIn, token, user) => {\n    cookie.save(\"auth\", token);\n    this.setState({ token, loggedIn, user });\n  };\n\n  componentDidMount() {\n    const qs = new URLSearchParams(window.location.search);\n    const cookieToken = cookie.load(\"auth\");\n    const token = qs.get(\"token\") || cookieToken || null;\n    this.validateToken(token);\n  }\n\n  render() {\n    return (\n      <LoginContext.Provider value={this.state}>\n        {this.props.children}\n      </LoginContext.Provider>\n    );\n  }\n}\n\nexport default LoginProvider;\n","import React from \"react\";\nimport { When } from \"react-if\";\n\nimport { LoginContext } from \"./context.js\";\n\nclass Login extends React.Component {\n  static contextType = LoginContext;\n\n  render() {\n    const isLoggedIn = this.context.loggedIn;\n    const canDo = this.props.capability\n      ? this.context.can(this.props.capability)\n      : true;\n    const okToRender = isLoggedIn && canDo;\n\n    return <When condition={okToRender}>{this.props.children}</When>;\n  }\n}\n\nexport default Login;\n","import React from \"react\";\nimport { When } from \"react-if\";\n\nimport { LoginContext } from \"./context.js\";\n\nclass Login extends React.Component {\n  static contextType = LoginContext;\n\n  constructor(props) {\n    super(props);\n    this.state = { username: \"\", password: \"\" };\n    console.log(props)\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.context.login(this.state.username, this.state.password);\n  };\n\n  render() {\n    return (\n      <>\n        <When condition={this.context.loggedIn}>\n          <button onClick={this.context.logout}>Log Out</button>\n        </When>\n\n        <When condition={!this.context.loggedIn}>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              placeholder=\"Username\"\n              name=\"Username\"\n              onChange={this.handleChange}\n            />\n            <input\n              placeholder=\"Password\"\n              name=\"Password\"\n              onChange={this.handleChange}\n            />\n            <button>Login</button>\n          </form>\n        </When>\n      </>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\n\nimport ToDo from \"./components/todo/todo.js\";\nimport Header from \"./components/todo/header.js\";\nimport Items from \"./components/todo/items.js\";\nimport UserSettings from \"./components/todo/useSettings.js\";\nimport Auth from \"./components/auth/auth.js\";\nimport Login from \"./components/auth/login.js\";\nimport LoginContext from \"./components/auth/context.js\";\n\nexport default function App() {\n  const [incomplete, setIncomplete] = useState();\n  const [list, setList] = useState([]);\n\n  useEffect(() => {\n    let incompleteCount = list.filter((item) => !item.complete).length;\n    setIncomplete(incompleteCount);\n    document.title = `To Do List: ${incompleteCount}`;\n  }, [list]);\n\n  return (\n    <>\n      <LoginContext>\n        <Login />\n\n        <Auth>\n          <div>Any valid user can see this</div>\n        </Auth>\n\n        <Auth capability=\"create\">\n          <div>Users with create access can see this</div>\n        </Auth>\n\n        <Auth capability=\"update\">\n          <div>Users with update access can see this</div>\n        </Auth>\n\n        <Auth capability=\"delete\">\n          <div>Users with delete access can see this</div>\n        </Auth>\n      </LoginContext>\n        <Header incomplete={incomplete} />\n        <UserSettings />\n        <ToDo setIncomplete={setIncomplete} setList={setList} list={list} />\n        <Items list={list} setList={setList} />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Settings from \"./context/Settings.js\";\n\nimport App from \"./app.js\";\n\nclass Main extends React.Component {\n  render() {\n      return (\n        <Settings>\n          <App />\n        </Settings>\n      )\n    } \n  }\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}